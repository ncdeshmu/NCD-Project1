[
  {
    "objectID": "NCD-Project1.html",
    "href": "NCD-Project1.html",
    "title": "NCD-Project1",
    "section": "",
    "text": "#URL &lt;- \"https://api.census.gov/data/2022/acs/acs1/pums/variables.html\"\n#Now use GET from httr package\n#install.packages('httr', keep_outputs = TRUE, repos='https://ftp.fau.de/cran/')\n#census_id &lt;- httr::GET(URL)\n\nWe will then be using a “helper” function, which can be used to accomplish a short task.\n\n#//a \"helper\" function\n#check_vars &lt;- function(user_vars, geography, year)\n #{\n   #year_range &lt;- seq(2010,2022, by = 1)\n    #if (!year %in% year_range){\n     #stop(paste(year), \"is not an allowed value for the year variable. Options are between 2010 - 2022\")\n    #} \n  #else if (year == 2020){\n    #stop(paste(year), \" is not available from census.gov\")\n  #}\n  #else{\n    #return(TRUE)\n  #}\n#}\n\nWe then have to create another function to query the API that allows the user to change some items.\n\n#my_get_api_data_func &lt;- function(year=2022, num_vars=AGEP, PWGTP, chr_vars=SEX, geography=ALL, select(API)){\n#options = AGEP, GASP, GRPIP, JWAP (time), JWDP (time), and\n#JWMNP\n#return(expression)\n#var_check &lt;- check_vars(user_vars,geography,year)\n \n#//call the specified return_tibble function\n#return_tibble\n \n#return(something)\n#specify multiple years of data\n#year_range &lt;- seq(2010,2022, by = 1)\n \n#}\n\nWriting a Generic Function for Summarizing\nThe ideas around object-oriented programming were briefly discussed. We will be using plot() functions.\n\n#Run these in your console\n#plot.function #what is used for a class = function\n#getS3method(\"plot\",\"data.frame\") #what is used for a class = data frame\n\n\n##plot\n## function (x, y, ...)\n## UseMethod(\"plot\")\n## &lt;bytecode: 0x00000000133fc528&gt;\n## &lt;environment: namespace:base&gt;\n\n\n#class(your_tibble) &lt;- c(\"census\", class(your_tibble)\n\nFor the census summary method, we will then write a function that produces means and standard deviations for our numeric variable(s) and counts for our categorical variable(s). • This function should take three arguments: the tibble with class census, the numeric variable(s) to summarize, the categorical variable(s) to summarize.\n\n#summary.census &lt;- function(class census, numeric_vector, weight_vector ){#sum(numeric_vector*weight_vector)/sum(weight_vector), sqrt(sum(numeric_vectorˆ2*weight_vector)/sum(weight_vector)-sample_meanˆ2)}\n\n\n#library(ggplot2) # put this in your setup code chunk\n#ggplot(_your_census_tibble_or_modification_,\n#aes(x = get(cat_var), y = get(num_var), weight = PWGTP)) +\n#geom_boxplot()"
  }
]